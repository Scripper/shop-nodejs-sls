service: import-service

frameworkVersion: '3'

custom:
  s3BucketName: import-service-game-devices
  uploadFolder: uploaded
  parsedFilesFolder: parsed
  productServiceName: product-service-${self:provider.stage}
  authorizationServiceName: authorization-service-${self:provider.stage}

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  stage: dev
  profile: default
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        type: request
        functionArn: ${cf:${self:custom.authorizationServiceName}.BasicAuthorizerARN}
  environment:
    FILE_BUCKET_NAME: ${self:custom.s3BucketName}
    UPLOAD_FOLDER_NAME: ${self:custom.uploadFolder}
  s3:
    fileBucket:
      name: ${self:custom.s3BucketName}
      corsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - 'PUT'
            AllowedOrigins:
              - '*'
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action: 's3:ListBucket'
          Resource: 'arn:aws:s3:::${self:custom.s3BucketName}'
        - Effect: 'Allow'
          Action: 's3:*'
          Resource: 'arn:aws:s3:::${self:custom.s3BucketName}/*'
        - Effect: 'Allow'
          Action: 'sqs:*'
          Resource: ${cf:${self:custom.productServiceName}.CatalogItemsQueueARN}

functions:
  importProductsFile:
    handler: importProductsFile.main
    events:
      - httpApi:
          path: /${self:provider.stage}/import
          method: get
          authorizer:
            name: basicAuthorizer

  importFileParser:
    handler: importFileParser.main
    events:
      - s3:
          bucket: fileBucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${self:custom.uploadFolder}/
            - suffix: .csv
    environment:
      PARSED_FILES_FOLDER_NAME: ${self:custom.parsedFilesFolder}
      CATALOG_ITEMS_QUEUE: ${cf:${self:custom.productServiceName}.CatalogItemsQueueURL}